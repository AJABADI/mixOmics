% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot-methods.R
\name{plot.tune.rcc}
\alias{plot.tune.rcc}
\alias{image.tune.rcc}
\alias{plot.pca}
\alias{plot.rcc}
\alias{plot.perf.pls.mthd}
\alias{plot.perf}
\alias{plot.perf.spls.mthd}
\alias{plot.perf.plsda.mthd}
\alias{plot.perf.splsda.mthd}
\alias{plot.perf.mint.plsda.mthd}
\alias{plot.perf.mint.splsda.mthd}
\alias{plot.perf.sgccda.mthd}
\alias{plot.tune.spls}
\alias{plot.tune.block.splsda}
\alias{plot.tune.splsda}
\alias{plot.tune}
\title{Plot the cross-validation score.}
\usage{
\method{plot}{tune.rcc}(x, col = heat.colors, ...)

\method{plot}{pca}(
  x,
  ncomp = min(10, length(x$sdev)),
  type = "barplot",
  explained.var = TRUE,
  ...
)

\method{plot}{rcc}(x, scree.type = c("pointplot", "barplot"), ...)

\method{plot}{perf.pls.mthd}(
  x,
  criterion = "MSEP",
  xlab = "number of components",
  ylab = NULL,
  LimQ2 = 0.0975,
  LimQ2.col = "darkgrey",
  cTicks = NULL,
  layout = NULL,
  ...
)

\method{plot}{perf.spls.mthd}(
  x,
  criterion = "MSEP",
  xlab = "number of components",
  ylab = NULL,
  LimQ2 = 0.0975,
  LimQ2.col = "darkgrey",
  cTicks = NULL,
  layout = NULL,
  ...
)

\method{plot}{perf.plsda.mthd}(
  x,
  dist = c("all", "max.dist", "centroids.dist", "mahalanobis.dist"),
  measure = c("all", "overall", "BER"),
  col,
  xlab = NULL,
  ylab = NULL,
  overlay = c("all", "measure", "dist"),
  legend.position = c("vertical", "horizontal"),
  sd = TRUE,
  ...
)

\method{plot}{perf.splsda.mthd}(
  x,
  dist = c("all", "max.dist", "centroids.dist", "mahalanobis.dist"),
  measure = c("all", "overall", "BER"),
  col,
  xlab = NULL,
  ylab = NULL,
  overlay = c("all", "measure", "dist"),
  legend.position = c("vertical", "horizontal"),
  sd = TRUE,
  ...
)

\method{plot}{perf.mint.plsda.mthd}(
  x,
  dist = c("all", "max.dist", "centroids.dist", "mahalanobis.dist"),
  measure = c("all", "overall", "BER"),
  col,
  xlab = NULL,
  ylab = NULL,
  study = "global",
  overlay = c("all", "measure", "dist"),
  legend.position = c("vertical", "horizontal"),
  ...
)

\method{plot}{perf.mint.splsda.mthd}(
  x,
  dist = c("all", "max.dist", "centroids.dist", "mahalanobis.dist"),
  measure = c("all", "overall", "BER"),
  col,
  xlab = NULL,
  ylab = NULL,
  study = "global",
  overlay = c("all", "measure", "dist"),
  legend.position = c("vertical", "horizontal"),
  ...
)

\method{plot}{perf.sgccda.mthd}(
  x,
  dist = c("all", "max.dist", "centroids.dist", "mahalanobis.dist"),
  measure = c("all", "overall", "BER"),
  col,
  weighted = TRUE,
  xlab = NULL,
  ylab = NULL,
  overlay = c("all", "measure", "dist"),
  legend.position = c("vertical", "horizontal"),
  sd = TRUE,
  ...
)

\method{plot}{tune.spls}(x, optimal = TRUE, sd = TRUE, col, ...)

\method{plot}{tune.splsda}(x, optimal = TRUE, sd = TRUE, col, ...)

\method{plot}{tune.block.splsda}(x, sd = TRUE, col, ...)
}
\arguments{
\item{x}{an \code{tune.splsda} object.}

\item{col}{character (or symbol) color to be used, possibly vector. One
color per component.}

\item{...}{arguments to be passed to other methods. For the
\code{"pointplot"} type see \code{\link{points}}, for \code{"barplot"} type
see \code{\link{barplot}}.}

\item{ncomp}{number of PCs to show.}

\item{type}{type of the plot, either "barplot" or argument passed to \code{type} in base \code{plot}.}

\item{explained.var}{logical. Whether to show proportion of variance explained (TRUE) or the total variance (FALSE).}

\item{scree.type}{character string, (partially) matching one of
\code{"pointplot"} or \code{"barplot"}, determining the kind of scree plots
to be produced.}

\item{criterion}{character string. What type of validation criterion to plot
for \code{pls} or \code{spls}. One of \code{"MSEP"}, \code{"RMSEP"},
\code{"R2"} or \code{"Q2"}. See \code{\link{perf}}.}

\item{xlab, ylab}{titles for \eqn{x} and \eqn{y} axes.  Typically character
strings, but can be expressions (e.g., \code{expression(R^2)}).}

\item{LimQ2}{numeric value. Signification limit for the components in the
model. Default is \code{LimQ2 = 0.0975}.}

\item{LimQ2.col}{character string specifying the color for the \code{LimQ2}
line to be plotted. If \code{"none"} the line will not be plotted.}

\item{cTicks}{integer vector. Axis tickmark locations for the used number of
components. Default is \code{1:ncomp} (see \code{\link{perf}}).}

\item{layout}{numeric vector of length two giving the number of rows and
columns in a multi panel display. If not specified, \code{plot.perf} tries
to be intelligent.}

\item{dist}{prediction method applied in \code{perf} for \code{plsda} or
\code{splsda}. See \code{\link{perf}}.}

\item{measure}{Two misclassification measure are available: overall
misclassification error \code{overall} or the Balanced Error Rate \code{BER}}

\item{overlay}{parameter to overlay graphs; if 'all', only one graph is
shown with all outputs; if 'measure', a graph is shown per distance; if
'dist', a graph is shown per measure.}

\item{legend.position}{position of the legend, one of "vertical" (only one
column) or "horizontal" (two columns).}

\item{sd}{If 'nrepeat' was used in the call to 'tune.splsda', error bar
shows the standard deviation if sd=TRUE}

\item{study}{Indicates which study-specific outputs to plot. A character
vector containing some levels of \code{object$study}, "all.partial" to plot
all studies or "global" is expected. Default to "global".}

\item{weighted}{plot either the performance of the Majority vote or the
Weighted vote.}

\item{optimal}{If TRUE, highlights the optimal keepX per component}

\item{\dots}{Further arguments sent to \code{\link{xyplot}} function.}
}
\value{
A plot object

A scree plot of explained variance by the study PCs.

none

none

none
}
\description{
This function provide a image map (checkerboard plot) of the
cross-validation score obtained by the \code{tune.rcc} function.

Plot the explained variances from a pca object

This function provides scree plot of the canonical correlations.

Function to plot performance criteria, such as MSEP, RMSEP, \eqn{R^2},
\eqn{Q^2} for s/PLS methods, and classification performance for supervised
methods, as a function of the number of components.

Function to plot performance criteria, such as classification error rate or
balanced error rate on a tune.splsda result.
}
\details{
\code{plot.tune.rcc} creates an image map of the matrix \code{object$mat}
containing the cross-validation score obtained by the \code{tune.rcc}
function. Also a color scales strip is plotted.

Creates a scree plot of explained variance by the study PCs.

\code{plot.perf} creates one plot for each response variable in the model,
laid out in a multi panel display.  It uses \code{\link{xyplot}} for
performing the actual plotting.

More details about the prediction distances in \code{?predict} and the
supplemental material of the mixOmics article (Rohart et al. 2017).

\code{plot.tune.splsda} plots the classification error rate or the balanced
error rate from x$error.rate, for each component of the model. A lozenge
highlights the optimal number of variables on each component.

\code{plot.tune.block.splsda} plots the classification error rate or the
balanced error rate from x$error.rate, for each component of the model. The
error rate is ordered by increasing value, the yaxis shows the optimal
combination of keepX at the top.
(e.g. `'keepX on block 1'_'keepX on block 2'_'keepX on block 3'``)
}
\examples{

data(nutrimouse)
X <- nutrimouse$lipid
Y <- nutrimouse$gene

## this can take some seconds
cv.score <- tune.rcc(X, Y, validation = "Mfold", plot = FALSE)
plot(cv.score)

# image(cv.score) # same result as plot()

#' \dontrun{
## successful: TRUE
## final: TRUE

data(multidrug)
pca.res <- pca(multidrug$ABC.trans, ncomp = 10, scale = TRUE)
plot(pca.res)
#' }

X <- nutrimouse$lipid
Y <- nutrimouse$gene
nutri.res <- rcc(X, Y, lambda1 = 0.064, lambda2 = 0.008)

## 'pointplot' type scree
plot(nutri.res) #(default)

\dontrun{
plot(nutri.res, pch = 19, cex = 1.2,
col = c(rep("red", 3), rep("darkblue", 18)))

## 'barplot' type scree
plot(nutri.res, scree.type = "barplot")

plot(nutri.res, scree.type = "barplot", density = 20, col = "black")
}


require(lattice)

## validation for objects of class 'pls' or 'spls'

data(liver.toxicity)
X <- liver.toxicity$gene
Y <- liver.toxicity$clinic

liver.pls <- pls(X, Y, ncomp = 3)
liver.perf <- perf(liver.pls, validation = "Mfold")

plot(liver.perf, criterion = "R2", layout = c(2, 2))

\dontrun{
## validation for objects of class 'plsda' or 'splsda'

data(breast.tumors)
X <- breast.tumors$gene.exp
# Y will be transformed as a factor in the function,
# but we set it as a factor to set up the colors.
Y <- as.factor(breast.tumors$sample$treatment)

res <- splsda(X, Y, ncomp = 2, keepX = c(25, 25))
breast.perf <- perf(res, nrepeat = 5)

plot(breast.perf)
plot(breast.perf, col=1:3)
plot(breast.perf, col=1:3, sd=FALSE)

}

\dontrun{
## validation for objects of class 'splsda'

data(breast.tumors)
X = breast.tumors$gene.exp
Y = as.factor(breast.tumors$sample$treatment)
out = tune.splsda(X, Y, ncomp = 3, nrepeat = 5, logratio = "none",
test.keepX = c(5, 10, 15), folds = 10, dist = "max.dist",
progressBar = TRUE)


plot(out)
plot(out, sd=FALSE)


\dontrun{
## validation for objects of class 'mint.splsda'

data(stemcells)
data = stemcells$gene
type.id = stemcells$celltype
exp = stemcells$study

out = tune(method="mint.splsda", X=data,Y=type.id, ncomp=2, study=exp, test.keepX=seq(1,10,1))
out$choice.keepX

plot(out)



## validation for objects of class 'mint.splsda'

data("breast.TCGA")
# this is the X data as a list of mRNA and miRNA; the Y data set is a single data set of proteins
data = list(mrna = breast.TCGA$data.train$mrna, mirna = breast.TCGA$data.train$mirna,
protein = breast.TCGA$data.train$protein)
# set up a full design where every block is connected
# could also consider other weights, see our mixOmics manuscript
design = matrix(1, ncol = length(data), nrow = length(data),
dimnames = list(names(data), names(data)))
diag(design) =  0
design
# set number of component per data set
ncomp = 5

# Tuning the first two components
# -------------

# definition of the keepX value to be tested for each block mRNA miRNA and protein
# names of test.keepX must match the names of 'data'
test.keepX = list(mrna = seq(10,40,20), mirna = seq(10,30,10), protein = seq(1,10,5))

# the following may take some time to run, note that for through tuning
# nrepeat should be > 1
tune = tune.block.splsda(X = data, Y = breast.TCGA$data.train$subtype,
ncomp = ncomp, test.keepX = test.keepX, design = design, nrepeat = 3)

tune$choice.ncomp
tune$choice.keepX

plot(tune)
}
}

}
\references{
Rohart F, Gautier B, Singh A, Lê Cao K-A. mixOmics: an R package for 'omics
feature selection and multiple data integration. PLoS Comput Biol 13(11):
e1005752
}
\seealso{
\code{\link{tune.rcc}}, \code{\link{image}}.

\code{\link{points}}, \code{\link{barplot}}, \code{\link{par}}.

\code{\link{pls}}, \code{\link{spls}}, \code{\link{plsda}},
\code{\link{splsda}}, \code{\link{perf}}.

\code{\link{tune.mint.splsda}}, \code{\link{tune.splsda}}
\code{\link{tune.block.splsda}} and http://www.mixOmics.org for more
details.
}
\author{
Sébastien Déjean and Ignacio González.

Florian Rohart, Kim-Anh Lê Cao, Ignacio González, Al J Abadi
\code{\link{plotIndiv}}, \code{\link{pca}} and http://www.mixOmics.org
for more details.

Sébastien Déjean and Ignacio González.

Ignacio González, Florian Rohart, Francois Bartolo, Kim-Anh Lê Cao.

Kim-Anh Lê Cao, Florian Rohart, Francois Bartolo.
}
\keyword{dplot}
\keyword{hplot}
\keyword{multivariate}
\keyword{plot}
\keyword{regression}
