% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TuneMultiModalSparsePLSDA.R
\name{TuneMultiModalSparsePLSDA}
\alias{TuneMultiModalSparsePLSDA}
\title{Tuning function for multi-modal supervised integration of MultiAssayExperiment assays}
\usage{
TuneMultiModalSparsePLSDA(
  data,
  formula,
  test_keep_features = NULL,
  ncomp = 2,
  design = "full",
  scale = TRUE,
  ...
)
}
\arguments{
\item{data}{A \code{MultiAssayExperiment} object with matching cells/samples
across all experiments.}

\item{formula}{A formula of form LHS ~ RHS where LHS is a name from colData(data) 
and RHS is a list of assays (e.g. assay_1 + assay_2 + ...).}

\item{test_keep_features}{Named list of integer vectors specifying the search grid}

\item{ncomp}{the number of components to include in the model. Default to 2.
Applies to all blocks.}

\item{design}{Matrix or character. Connects assays during integration.
Each value is a continuous number b/w 0 (not connected) and 1 (fully connected).
'null' will connect the LHS to all RHS only and 'full' will fully connect all
assays.}

\item{scale}{Logical. If scale = TRUE, each block is standardized to zero
means and unit variances (default: TRUE)}

\item{...}{Other arguments passed ro tune.block.splsda}
}
\value{
A list of class'tune'
}
\description{
Tuning function for multi-modal supervised integration of MultiAssayExperiment assays
}
\examples{
\dontrun{
library(MultiAssayExperiment)
data("miniACC")
miniACC <- MatchedAssayExperiment(miniACC)
ncomp <- 2
## mixOmics needs unique feature names across modalities
miniACC <- make_unique_feature_names(miniACC)
test_keep_features <- list(RNASeq2GeneNorm = c(20, 30), 
                           gistict= c(20, 30), 
                           miRNASeqGene= c(20, 30, 40))

tune.res <- TuneMultiModalSparsePLSDA(data = miniACC, 
                                      formula = vital_status ~ 
                                          RNASeq2GeneNorm + gistict + miRNASeqGene,
                                      test_keep_features = test_keep_features, 
                                      ncomp = ncomp, design = 'full', scale = TRUE, 
                                      BPPARAM = BiocParallel::MulticoreParam(parallel::detectCores()-1))

## sample plot
plot(tune.res)
tune.res$choice.keepX
}
}
